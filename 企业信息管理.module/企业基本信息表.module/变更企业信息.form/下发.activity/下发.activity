<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<activity id="__LVpQybHT63cztl6p89f">
  <name>下发</name>
  <parentId>__AMZFpuyWR5QJNjVmQaQ</parentId>
  <type>13</type>
  <onActionFlow></onActionFlow>
  <onActionPrint></onActionPrint>
  <colorType></colorType>
  <beforeActionScript><![CDATA[#include "constant";
(function () {
  // 如果选择的单位已在执行变更流程，则暂停下发
  var companys = getItemValueAsString('单位简称');
  if(companys=='') return '公司为空'
  
  var newcompany = companys.split(";")
  println("newcompany=="+newcompany)
  var roleid = getRoleIdByName(subJyPersonInCharge); //获取对应角色ID
  var userArr = getUsersByRoleId(roleid); //根据角色，获取该角色下所有用户集合
  var formName = '企业基础信息总览'
  var inProcess = []
  // 判断该用户所属公司是否在companys中
  for (var iter = userArr.iterator(); userArr != null && iter.hasNext(); ) {
    var user = iter.next();
    var userDep = getUserDep(user)// 获取用户所属公司, 函数库 globalMethods
    var depName = userDep.depName;
    if(companys.indexOf(depName) >= 0) {
      var sql = "select * from tlk_" + formName + " where item_单位简称='" + depName 
      +"' and statelabel IS NOT NULL and statelabel <> '' and statelabel <> '完成'";
      var datas = findBySQL(sql);
      if(isNotNull(datas)) {
        inProcess.push(depName)
      }
    
    println("depname=="+depName)
    }
  }
  
  if(inProcess.length) return inProcess.join('; ') + '已在执行变更流程。'
})()

]]></beforeActionScript>
  <afterActionScript><![CDATA[]]></afterActionScript>
  <retractBeforeActionScript><![CDATA[]]></retractBeforeActionScript>
  <retractAfterActionScript><![CDATA[]]></retractAfterActionScript>
  <hiddenScript><![CDATA[]]></hiddenScript>
  <readonlyScript><![CDATA[]]></readonlyScript>
  <startFlowScript><![CDATA[]]></startFlowScript>
  <editMode>0</editMode>
  <fileNameScript><![CDATA[]]></fileNameScript>
  <iconurl></iconurl>
  <orderno>1</orderno>
  <stateToShow></stateToShow>
  <parentForm>__AMZFpuyWR5QJNjVmQaQ</parentForm>
  <jumpType>0</jumpType>
  <expSub>false</expSub>
  <icon></icon>
  <disableFlowNode>false</disableFlowNode>
  <changeFlowOperator>false</changeFlowOperator>
  <changeFlowCc>false</changeFlowCc>
  <multiLanguageLabel></multiLanguageLabel>
  <dispatcherMode>0</dispatcherMode>
  <dispatcherUrl><![CDATA[]]></dispatcherUrl>
  <dispatcherParams><![CDATA[[{"paramKey":"","paramValue":""}]]]></dispatcherParams>
  <jumpMode>0</jumpMode>
  <jumpActOpenType>0</jumpActOpenType>
  <withOld>false</withOld>
  <actionType>1</actionType>
  <actionDispatcherUrlScript><![CDATA[]]></actionDispatcherUrlScript>
  <actionSelection>0</actionSelection>
  <relatedFormId></relatedFormId>
  <actionScript><![CDATA[(function(){
  
    function SetprocessData(sql,data){
        const regex = /^\d{4}-\d{1,2}-\d{1,2}$/;
        var fulldata = [];
  
        //获取表单数据
        var Query = queryBySQL(sql);
        var Iter = Query.iterator();
        while(Iter != null && Iter.hasNext()){
          var insertData = [];
          var Item = Iter.next();
          var itemMap = Item.getItemMap()
          var keySet = itemMap.keySet()
  
          for (var iter = keySet.iterator(); keySet != null && iter.hasNext(); ) {
            var key = iter.next();
    
            if (data.hasOwnProperty(key)){
              var key_value = data[key]
  
            }else{
              var key_value = Item.getItemValueAsString(key)
  
            }
    
            if (regex.test(key_value)) {
              insertData.push({
                type:"date",
                key:String(key),
                value:Item.getItemValueAsDate(key)
              })
            } else {
              insertData.push({
                key:String(key),
                value:key_value
              })
  
            }
            }
    
            if (data.hasOwnProperty("parent")){
              var key_value = data["parent"]
              insertData.push({
                type:"parent",
                key:String("parent"),
                value:key_value
              })
            }
            fulldata.push(insertData)
        }
        return fulldata;   
    }
    
    
    function StartProcess(user, formName, Data, flowId, startNode, endNode){
        var docProcess = getDocumentProcess(); 
        var currentUser = getWebUser();
        for(var i = 0; i < Data.length; i++) {
          var insertData = Data[i];
  
          var newDoc = createNewFormData(formName, user, insertData);
          if(typeof(flowId)!="undefined" && typeof(startNode)!="undefined" && typeof(endNode)!="undefined"){
            var params = getParamsTable();
            params.setParameter("_flowid", flowId);
            docProcess.doStartFlowOrUpdate(newDoc, params, currentUser);
            docProcess.doFlow(newDoc, params, startNode, [endNode], '86', '请按要求准时提交', currentUser);
          }
      }
      return newDoc;
    }
  
  
    var formName = "企业基础信息总览";
    var subformName = "控股股东"
    var flowId = '__zc1Wvw85rn9J6cD6XC3'; //要改
    var startNode = '1692952113426'; //上级经办人
    var endNode = '1692952095644'; //经办人
    var rolename = "集团企业信息管理员"; //上级经办人角色
    var rolename_1 = "子公司企业信息管理部门员工"
    var companys = getItemValueAsString('单位简称');
    var currentUser = getWebUser()

    var roleid = getRoleIdByName(rolename_1); //获取对应角色ID
    var userArr = getUsersByRoleId(roleid); //根据角色，获取该角色下所有用户集合
    var users = []
    
    // 判断该用户所属公司是否在companys中
    for (var iter = userArr.iterator(); userArr != null && iter.hasNext(); ) {
      var user = iter.next();
      var userDep = getUserDep(user)// 获取用户所属公司, 函数库 globalMethods
      var depName = userDep.depName;
      if(companys.indexOf(depName) >= 0) {
        users.push(user);
        companys.replace(depName,"")
        println("companys=="+companys)
        
        
    
        var userDepName = userDep.depName

        var sql = "select * from tlk_" + formName + " where item_单位简称='" + userDepName +"' and item_是否最新版本='是'";     //sql筛选
        var datas = findBySQL(sql);
        var data = {
          "下发用户":user.getId(),
          "截止时间":getItemValue('截止时间'),
          "版本号":datas.getItemValueAsInt('版本号') + 1,
          "是否最新版本":"否",
          "上一版本ID":datas.getId(),
      };
        var insertData = SetprocessData(sql,data)
        if(ifUserBelongsToRole(currentUser,rolename)){
            newDoc = StartProcess(user,formName,insertData, flowId,startNode,endNode)
            println("上级下发")

        }else{
            newDoc = StartProcess(user,formName,insertData, flowId,endNode,endNode)
            println("自己填报")
        }
  
        var targetParentId = newDoc.getId();
        var sourceParentId = datas.getId();
        var subdata = {
            "parent":targetParentId,
        };
        var subSql = "select * from tlk_" + subformName + " where parent='" + sourceParentId + "'"
        var subinsertData = SetprocessData(subSql,subdata)
        StartProcess(user,subformName,subinsertData)
      }
    }
  var noncompany = splitString(companys,";")
  println("noncompany=="+noncompany)
  //if(noncompany)
    })()]]></actionScript>
  <workFlowType>0</workFlowType>
  <contextMenu>false</contextMenu>
  <showInToolbar>true</showInToolbar>
  <transpond></transpond>
  <targetList>|</targetList>
  <label><![CDATA[]]></label>
  <processPreview>false</processPreview>
</activity>