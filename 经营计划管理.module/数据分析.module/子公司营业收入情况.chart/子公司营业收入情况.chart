<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<chart id="__omsoXguFMOH5s9uHevI">
  <name>子公司营业收入情况</name>
  <parentId>__PMMAGdh7XQSkW07Mjea</parentId>
  <description></description>
  <scripttext><![CDATA[(function () {
  var field1 = '营业收入'
  var field2 = '年度经营目标值'
  var field = field1 + field2;
  var sql = "select * from tlk_季度表 where YEAR(item_年份)='2023' and item_指标大类='财务指标' and item_指标项目='" 
  + field1 + "'";
  var query = queryBySQL(sql);
  var companyArr = {}
  var seasons = getSeasonsArr();
  if(query!=null){
    var iter = query.iterator();
    while(iter != null && iter.hasNext()){
      var item = iter.next();
      var companyId = item.getItemValueAsString('公司');
      var dept = getDeptById(companyId)
      var deptName = String(dept.getName())
      if(!companyArr[deptName]) {
        companyArr[deptName] = {}
        companyArr[deptName][field] = 0
        companyArr[deptName]['seasons'] = [0,0,0,0]
        companyArr[deptName]['seasonTotal'] = 0
      }
      if(!companyArr[deptName][field]) {
        companyArr[deptName][field] = +item.getItemValueAsString(field2)
      }
      
      var itemSeason = item.getItemValueAsString('季度')
      seasons.forEach(function(season,index) {
        if(itemSeason == season) {
          var seasonValue = item.getItemValueAsString('季度预估值')
          companyArr[deptName]['seasons'][index] += +seasonValue
          companyArr[deptName]['seasonTotal'] += seasonValue
        }
      })
    }
  }
  var xAxisData = [];
  var budgetData = [];
  var totalData = [];
  var stackName = '当期累计实际营业收入总额';
  var stackData = [[],[],[],[]];
  var completionRate = [];
  for (var key in companyArr) {
    xAxisData.push(key)
    var item = companyArr[key]
    var targetValue = 0;
    for(var key2 in item) {
      if(key2 == field) {
        targetValue = item[key2]
        budgetData.push(targetValue)
      }
    }
    var seasonArr = item['seasons']
    var totalTemp = 0
    seasonArr.forEach(function(data, index) {
      stackData[index].push(data)
      totalTemp += data
    })
    totalData.push(formatNumber(totalTemp))
    completionRate.push(formatNumber((totalTemp/targetValue)*100))
  }

  var stackArr = [{
    name: '预算年营业收入总额',
    type: 'bar',
    data: budgetData,
    emphasis: {
      focus: 'series'
    },
  },{
    name: '当期累计实际营业收入总额',
    type: 'bar',
    data: totalData,
    emphasis: {
      focus: 'series'
    },
  }];
  seasons.forEach(function(season, index) {
    stackArr.push({
      name: season,
      type: 'bar',
      stack: stackName,
      emphasis: {
        focus: 'series'
      },
      data: stackData[index]
    })
  })
  stackArr.push({
    name: '营业收入总额预算达成率',
    type: 'line',
    yAxisIndex: 1,
    smooth: true,
    data: completionRate
  })
	  var unit = ['万元','万元','万元','万元','万元','万元','%'];
  var option = {
    height: 400,
    grid: [
      {left: '10%', right: '8%', top: '8%', height: '43%' },
    ],
    title: {
      text: '子公司营业收入数据',
    },
    toolbox: {
      show: true,
      feature: {
        // restore: {},
        saveAsImage: {}
      }
    },
     legend: {
      top: '4%'
    },
    tooltip: {
      trigger: 'axis',
      axisPointer: {
        type: 'shadow'
      },
    },
    xAxis: [
      {
        type: 'category',
        data: xAxisData,
      }
    ],
    yAxis: [
      {
        type: 'value',
        axisLabel: {
          formatter: '{value} 万元'
        }
      },{
        type: 'value',
        splitLine: {show: false},
        axisLabel: {
          formatter: '{value} %'
        }
      }
    ],
    series: stackArr
  };  
  return option;
})()]]></scripttext>
  <commonFilterCondition><![CDATA[[]]]></commonFilterCondition>
  <viewId></viewId>
  <searchFormId></searchFormId>
  <fontSize>12</fontSize>
  <chartName></chartName>
</chart>