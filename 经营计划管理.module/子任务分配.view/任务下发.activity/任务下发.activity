<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<activity id="__LopYQ2HmOo5oxgNhcrC">
  <name>任务下发</name>
  <parentId>__zQW83pLFIgZJRvE7sCD</parentId>
  <type>13</type>
  <onActionForm></onActionForm>
  <onActionView></onActionView>
  <colorType></colorType>
  <beforeActionScript><![CDATA[#include "globalMethods";
(function() {
  return createConfirm("分配后不可修改和撤回，请确认已保存最新数据！确认下发分配？")
})()
]]></beforeActionScript>
  <afterActionScript><![CDATA[#include "globalMethods";
(function() {
  var formName = "子任务分配"
  var newFormName = '经营计划填报主表'
  var roleName = '部门主要经办人'
  
  var roleName_1 = '子公司部门主要经办人'  //子公司部门专用的角色
  var roleid_1 = getRoleIdByName(roleName_1);
  var roleUsers_1 = getUsersByRoleId(roleid_1);
  var userObj = {}
  for (var iter = roleUsers_1.iterator(); roleUsers_1 != null && iter.hasNext();) {
    var user = iter.next();
    // var userCompany = getUserDep(user) // 获取用户所属公司信息
    // var userCompanyId = String(userCompany.did)
    var userDeptArr = getDeptByUserIdAndRoleName(user.getId(), roleid_1) // 获取用户所属具体部门
    var item = userDeptArr.get(0)
    var userDeptId = item.get("departmentid")
    var userCompany = getCompanyTheDeptBelongto(userDeptId).dept // 获取部门所属公司，即用户所属公司信息
    var userCompanyId = String(userCompany.getId())
    // userObj[deptId] = user
    userObj[userCompanyId] = {
      "user": user,
      "userDeptId": userDeptId
    }
  }

  var flowId = '__oJLE2QmF9qxBpscWGKx'
  var flowNodeId1 = '1684138590045'
  var flowNodeId2 = '1681178950516'
  var currentUser = getWebUser();
  var parentDoc = getParentDocument()
  var parentId = parentDoc.getId()
  var date = parentDoc.getItemValueAsDate('年份')
  var companyName = parentDoc.getItemValueAsString('公司名称')
  var parentCompanyId = parentDoc.getItemValueAsString('公司')
  var docProcess = getDocumentProcess(); 

  var sql = "select * from tlk_" + formName + " where parent='" + parentId + "'"
  var query = queryBySQL(sql);
  var sendObj = {}
  if(query!=null && query.size() > 0){
    var iter = query.iterator();
    while(iter != null && iter.hasNext()){
      var item = iter.next();
      var dutyIndex = item.getItemValueAsString('填报内容')
      var deptIds = item.getItemValueAsString('公司')
      var deadline = item.getItemValueAsDate('截止时间')
      var desc = item.getItemValueAsString('备注')
      var files = item.getItemValueAsString('附件')
      if(!isNotNull(deptIds)) {
        continue
      }
      var deptArr = deptIds.split(';')
      deptArr.forEach(function(deptId) {
        var dept = getDeptById(deptId)
        var dataDeptId = deptId
        // var deptName = String(dept.getName())
        var roleid = getRoleIdByName(roleName)
        var users = getUsersByDptIdAndRoleId(deptId, roleid)
        if(users.size() <= 0) {
          users = createObject("java.util.ArrayList");
          if(isNotNull(userObj[deptId])) {
            users.add(userObj[deptId].user)
            dataDeptId = userObj[deptId].userDeptId
          } 
        }

        if(users.size() > 0) {
          if(!sendObj[deptId]) {
            sendObj[deptId] = {
              dataDeptId: dataDeptId,
              deptName: String(dept.getName()),
              dutyIndex: [],
              deadline: deadline,
              desc: desc,
              files: files,
              user: users.get(0)
            }
          }
          sendObj[deptId].dutyIndex.push(dutyIndex)
        }
      })
    }
  }

  var sendNumber = 0;
  for(var deptId in sendObj) {
    var item = sendObj[deptId]
    var user = item.user
    var userId = user.getId();

    var insertData = [{
      key: '公司',
      value: deptId
    }, {
      key: '公司名称',
      value: companyName + "/" + item.deptName
    }, {
      key: '下发用户',
      value: userId
    }, {
      type: 'date',
      key: '年份',
      value: date
    }, {
      type: 'date',
      key: '截止时间',
      value: item.deadline
    }, {
      key: '备注',
      value: item.desc
    }, {
      key: '附件',
      value: item.files
    }, {
      key: '父任务ID',
      value: parentId
    }, {
      key: '上级公司ID',
      value: parentCompanyId
    }, {
      key: '填报内容',
      value: item.dutyIndex.join(";")
    }, {
      key: '下发分配状态',
      value: '未发送'
    },  {
      key: '数据所属部门',
      value: item.dataDeptId
    }]
    var newDoc = createNewFormData(newFormName, user, insertData)

    var params = getParamsTable();
    params.setParameter("_flowid", flowId);
    docProcess.doStartFlowOrUpdate(newDoc, params, currentUser);
    docProcess.doFlow(newDoc, params, flowNodeId1, [flowNodeId2], '86', '请按要求准时提交', currentUser);
    sendNumber ++;
  }
  if(sendNumber > 0) {
    parentDoc.findItem("下发分配状态").setValue("已发送"); 
    docProcess.doUpdate(parentDoc);
  }
})()
]]></afterActionScript>
  <hiddenScript><![CDATA[/*(function () {
  var parentDoc = getParentDocument()
  var value = parentDoc.getItemValueAsString('下发分配状态');
  var hide = false
  if(value == '已发送') {
    hide = true
  }
  return hide
})()*/]]></hiddenScript>
  <readonlyScript><![CDATA[]]></readonlyScript>
  <editMode>0</editMode>
  <fileNameScript><![CDATA[]]></fileNameScript>
  <orderno>1</orderno>
  <parentView>__zQW83pLFIgZJRvE7sCD</parentView>
  <impmappingconfigid></impmappingconfigid>
  <jumpType>0</jumpType>
  <expSub>false</expSub>
  <icon></icon>
  <disableFlowNode>false</disableFlowNode>
  <changeFlowOperator>false</changeFlowOperator>
  <changeFlowCc>false</changeFlowCc>
  <multiLanguageLabel></multiLanguageLabel>
  <dispatcherMode>0</dispatcherMode>
  <dispatcherUrl><![CDATA[]]></dispatcherUrl>
  <dispatcherParams><![CDATA[[{"paramKey":"","paramValue":""}]]]></dispatcherParams>
  <jumpMode>0</jumpMode>
  <jumpActOpenType>0</jumpActOpenType>
  <withOld>false</withOld>
  <actionType>1</actionType>
  <actionDispatcherUrlScript><![CDATA[]]></actionDispatcherUrlScript>
  <actionSelection>0</actionSelection>
  <relatedFormId></relatedFormId>
  <workFlowType>0</workFlowType>
  <contextMenu>true</contextMenu>
  <showInToolbar>true</showInToolbar>
  <label><![CDATA["任务下发（先保存数据再下发）"]]></label>
  <processPreview>false</processPreview>
</activity>